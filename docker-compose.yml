version: '3.9'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  api-public:
    build:
      context: ./api-public
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    networks:
      - app-network

  news-service:
    build:
      context: ./news-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
